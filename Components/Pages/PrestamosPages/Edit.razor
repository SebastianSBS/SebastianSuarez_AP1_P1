@page "/PrestamosPages/Edit"
@page "/PrestamosPages/Edit/{Id:int}"
@inject PrestamosServices prestamoServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<EditForm Model="prestamos" OnValidSubmit="Guardar" FormName="editForm">
    <DataAnnotationsValidator />
    <div class="card">

        <div class="card-header">
            <h1>Editar</h1>
        </div>

        <div class="card-body">

            <label>ID:</label>
            <div class="input-group">
                <InputNumber @bind-Value="prestamos.PrestamoId" class="form-control"></InputNumber>
                <button type="button" class="btn btn-outline-primary oi oi-magnifying-glass" @onclick="Buscar"></button>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <label>Nombre:</label>
                    <InputText @bind-Value="prestamos.Nombres" class="form-control"></InputText>
                    <ValidationMessage For="@(() => prestamos.Nombres)" />
                </div>

                <div class="col-md-6">
                    <label>Concepto:</label>
                    <InputText @bind-Value="prestamos.Concepto" class="form-control"></InputText>
                    <ValidationMessage For="@(() => prestamos.Concepto)" />
                </div>

                <div class="col-md-6">
                    <label>Monto:</label>
                    <InputNumber @bind-Value="prestamos.Monto" class="form-control"></InputNumber>
                    <ValidationMessage For="@(() => prestamos.Monto)" />
                </div>
            </div>
        </div>

        <div class="card-footer d-flex justify-content-center">
            <button type="button" class="btn btn-outline-primary" @onclick="Nuevo">Nuevo <i class="oi oi-file" /></button>
            <button type="submit" class="btn btn-outline-success">Guardar <i class="bi bi-floppy mt-3" /></button>
            <a class="btn btn-outline-primary" href="Prestamos/Index">
                <span class="bi bi-arrow-left mt-3"></span> Volver
            </a>
        </div
    </div>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    public Prestamos prestamos { get; set; } = new Prestamos();
    private bool Existe = false;

    protected override async Task OnInitializedAsync()
    {
        if (Id.HasValue)
        {
            prestamos.PrestamoId = Id.Value;
            await Buscar();
        }
    }

    public async Task Buscar()
    {
        var prestamoEncontrado = await prestamoServices.Buscar(prestamos.PrestamoId);

        if (prestamoEncontrado != null)
        {
            prestamos = prestamoEncontrado;
        }
    }


    public void Nuevo()
    {
        prestamos = new Prestamos();
        Existe = false;
    }

    public async Task Guardar()
    {
        var guardo = await prestamoServices.Guardar(this.prestamos);
        Nuevo();
    }

    public async Task Eliminar()
    {
        var eliminado = await prestamoServices.Eliminar(prestamos.PrestamoId);
        Nuevo();
    }
}
